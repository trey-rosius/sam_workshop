AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sam Workshop Direct Lambda Resolver

Globals:
  Function:
    Timeout: 5
    Runtime: python3.8
    Tracing: Active
    Environment:
        Variables:
            # Powertools env vars: https://awslabs.github.io/aws-lambda-powertools-python/latest/#environment-variables
            TABLE_NAME: !Ref SamWorkshopDDBTable
            LOG_LEVEL: INFO
            POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
            POWERTOOLS_LOGGER_LOG_EVENT: true
            POWERTOOLS_SERVICE_NAME: sample_resolver

Resources:
  SamWorkshopFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - LambdaLoggingPolicy

    Properties:
        Handler: app.lambda_handler
        CodeUri: code
        Role: !GetAtt SamWorkshopRole.Arn
        Description: Lambda Powertools Direct Lambda Resolver
        Tags:
            SOLUTION: LambdaPowertoolsPython

  # IAM Permissions and Roles

  AppSyncServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
              -
                Effect: "Allow"
                Principal:
                    Service:
                        - "appsync.amazonaws.com"
                Action:
                    - "sts:AssumeRole"

  InvokeLambdaResolverPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "DirectAppSyncLambda"
      PolicyDocument:
          Version: "2012-10-17"
          Statement:
              -
                Effect: "Allow"
                Action: "lambda:invokeFunction"
                Resource:
                    - !GetAtt SamWorkshopFunction.Arn
      Roles:
          - !Ref AppSyncServiceRole
  LambdaLoggingPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: LambdaXRayPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ]
            Resource: "*"
      Roles:
        - !Ref SamWorkshopRole

  DynamoDBReadPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: DynamoDBReadPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: ["dynamodb:GetItem", "dynamodb:Query"]
            Resource:
              - !GetAtt SamWorkshopDDBTable.Arn
      Roles:
        - !Ref SamWorkshopRole

  DynamoDBWritePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: DynamoDBWritePolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              [
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DeleteItem",
              ]
            Resource:
              - !GetAtt SamWorkshopDDBTable.Arn

      Roles:
        - !Ref SamWorkshopRole

  SamWorkshopRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"

  RoleAppSyncCloudWatch:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com
  # GraphQL API

  SamWorkshopApi:
    Type: "AWS::AppSync::GraphQLApi"
    Properties:
        Name: SamWorkshopApi
        AuthenticationType: "API_KEY"
        XrayEnabled: true
        LogConfig:
          CloudWatchLogsRoleArn: !GetAtt RoleAppSyncCloudWatch.Arn
          ExcludeVerboseContent: FALSE
          FieldLogLevel: ALL

  SamWorkshopApiKey:
    Type: AWS::AppSync::ApiKey
    Properties:
        ApiId: !GetAtt SamWorkshopApi.ApiId

  SamWorkshopApiSchema:
    Type: "AWS::AppSync::GraphQLSchema"
    Properties:
      ApiId: !GetAtt SamWorkshopApi.ApiId
      DefinitionS3Location: "schema/schema.graphql"
  ###################
  # LAMBDA DIRECT DATA SOURCE AND RESOLVER
  ##################
  SamWorkshopFunctionDataSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
        ApiId: !GetAtt SamWorkshopApi.ApiId
        Name: "SamWorkshopLambdaDirectResolver"
        Type: "AWS_LAMBDA"
        ServiceRoleArn: !GetAtt AppSyncServiceRole.Arn
        LambdaConfig:
            LambdaFunctionArn: !GetAtt SamWorkshopFunction.Arn

  CreateUserResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: !GetAtt SamWorkshopApi.ApiId
      TypeName: "Mutation"
      FieldName: "createUser"
      DataSourceName: !GetAtt SamWorkshopFunctionDataSource.Name
  UpdateUserResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: !GetAtt SamWorkshopApi.ApiId
      TypeName: "Mutation"
      FieldName: "updateUser"
      DataSourceName: !GetAtt SamWorkshopFunctionDataSource.Name
  GetUserResolver:
    Type: "AWS::AppSync::Resolver"
    Properties:
      ApiId: !GetAtt SamWorkshopApi.ApiId
      TypeName: "Query"
      FieldName: "getUser"
      DataSourceName: !GetAtt SamWorkshopFunctionDataSource.Name
  ###################
  # DYNAMODB TABLE
  ##################
  SamWorkshopDDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
Outputs:
  SamWorkshopFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt SamWorkshopFunction.Arn

  SamWorkshopAPI:
    Value: !GetAtt SamWorkshopApi.Arn
